<?php

namespace ClientesBundle\Repository;


use Doctrine\Common\Collections\Criteria;

/**
 * ClienteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClienteRepository extends \Doctrine\ORM\EntityRepository
{
    /* 
    * Obtiene el listado de los clientes de una empresa
    */
    public function dameClientesEmpresa($empresa){
            // Listado completo de clientes

            $consulta = $this->getQueryBuilder();
            
            $consulta->Where("c.baja IS NULL") ;
            $consulta->andWhere("c.empresa =:empresa")
                    ->setParameter('empresa', $empresa);
            $consulta->orderby('c.nombre', 'ASC')
            ->getQuery();

            return $consulta->getQuery()->getResult();
    }


    /* 
    * Obtiene el listado de los clientes de una empresa
    */
    public function dameListaClientesArray($empresa){
            // Listado completo de clientes
            $datos = []; $i=0;
            $consulta = $this->getQueryBuilder();
            
            $consulta->Where("c.baja IS NULL") ;
            $consulta->andWhere("c.empresa =:empresa")
                    ->setParameter('empresa', $empresa);
            $consulta->orderby('c.nombre', 'ASC')
            ->getQuery();
             $consulta->getQuery()->getResult();
            $lista = $consulta->getQuery()->iterate();
            foreach ($lista as $item){
                $datos[$i]['id'] = $item[0]->getId();
                $i++;
            }
            return $datos;
    }


    /* 
    * Obtiene el listado de los clientes de una empresa
    */
    public function dameListaClientes($empresa){
            // Listado completo de clientes

            $consulta = $this->getQueryBuilder();
            $consulta->select('c.id','c.nombre');
            $consulta->Where("c.baja IS NULL") ;
            $consulta->andWhere("c.empresa =:empresa")
                    ->setParameter('empresa', $empresa);
            $consulta->orderby('c.nombre', 'ASC')
            ->getQuery();
             

            return $consulta->getQuery()->getResult();
    }
    
    /* 
    * Obtiene el listado de los clientes de una empresa
    * segÃºn un criterio de bÃºsqueda
    */
    public function buscaClientesSegunTexto($cadena,$empresa){
            // Listado completo de clientes

        
            $consulta = $this->getQueryBuilder();
            $consulta->Where("c.baja IS NULL") 
                    ->andWhere("c.empresa =:empresa")
                    ->setParameter('empresa', $empresa);
                    $criterio = Criteria::create()
                    ->andwhere(Criteria::expr()->ORX(
                            Criteria::expr()->contains('c.nombre',$cadena),
                            Criteria::expr()->contains('c.contacto',$cadena),
                            Criteria::expr()->contains('c.direccion',$cadena),
                            Criteria::expr()->contains('c.poblacion',$cadena)
                            )); 
                    $consulta->addCriteria($criterio);
            $consulta->getQuery();

            return $consulta->getQuery()->getResult();
    }    
    
    private function getQueryBuilder()
    {
        $em = $this->getEntityManager();

        $qb = $em->getRepository('ClientesBundle:Cliente')
            ->createQueryBuilder('c');

        return $qb;
    }
}
